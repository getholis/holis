version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  openfire: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: holis_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: holis_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: holis_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    env_file:
      - ./.envs/.production/.traefik
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
      - "0.0.0.0:9001:9001"

  redis:
    image: redis:5.0

  rtc:
    image: gcr.io/espazum/rtc:latest

  celeryworker:
    <<: *django
    image: holis_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: holis_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: holis_production_flower
    command: /start-flower

  openfire:
    restart: always
    image: gizmotronic/openfire:4.4.4
    volumes:
      - openfire:/var/lib/openfire
      - /usr/share/openfire/resources/security:/usr/share/openfire/resources/security
    ports:
      - 5222:5222
      - 7777:7777
      - 9090:9090
      - 7443:7443
      - 7070:7070
