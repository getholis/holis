version: '3.7'

volumes:
  production_postgres_data: {}
  production_redis_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django: &django
    image: gcr.io/espazum/holis-full:latest
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: holis_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: holis_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    env_file:
      - ./.envs/.production/.traefik
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
      - "0.0.0.0:9001:9001"

  redis:
    image: redis:5.0
    volumes:
      - production_redis_data:/data

  rtc:
    image: gcr.io/espazum/rtc:latest

  celeryworker:
    <<: *django
    image: holis_production_celeryworker
    command: /start-celeryworker
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]

  celerybeat:
    <<: *django
    image: holis_production_celerybeat
    command: /start-celerybeat
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]

  flower:
    <<: *django
    image: holis_production_flower
    command: /start-flower
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
