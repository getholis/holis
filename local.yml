version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  openfire: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: holis_local_django
    depends_on:
      - postgres
      - mailhog
      - redis
    volumes:
      - .:/app
      - ./webapp:/app/webapp
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: holis_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: holis_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: holis_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: holis_local_flower
    ports:
      - "5555:5555"
    command: /start-flower
  
  openfire:
    restart: always
    image: gizmotronic/openfire:4.4.4
    volumes:
      - openfire:/var/lib/openfire
    ports:
      - 5222:5222
      - 7777:7777
      - 9090:9090
      - 7443:7443

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: holis_local_node
    depends_on:
      - django
    volumes:
      - .:/app
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - "3000:3000"
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "3001:3001"
