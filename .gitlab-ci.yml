stages:
  - black
  - test

variables:
  POSTGRES_USER: 'lesgens'
  POSTGRES_PASSWORD: ''
  POSTGRES_DB: 'test_lesgens'
  POSTGRES_HOST_AUTH_METHOD: trust
  CELERY_BROKER_URL: 'redis://redis:6379/0'

black:
  stage: black
  image: milansuk/python-black:latest
  script:
    - black --fast


pytest:
  stage: test
  image: docker
  tags:
    - docker
  services:
    - docker:dind

  before_script:
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base curl openssl-dev libffi-dev
    - curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - pip install docker-compose
    - docker-compose -f local.yml build
    # Ensure celerybeat does not crash due to non-existent tables
    - docker-compose -f local.yml run --rm django python manage.py migrate
    - docker-compose -f local.yml up -d
  script:
    - docker-compose -f local.yml run django pytest
